{
    "openapi": "3.0.3",
    "info": {
        "title": "API Generation Library example APIs",
        "version": "1.0.0",
        "description": "This is the definition of the **API Generation Library example APIs**.  Hopefully it's interesting",
        "contact": {
            "name": "Library API Support",
            "url": "http://apigeneration.tech/support",
            "email": "support@apigeneration.tech"
        }
    },
    "servers": [
        {
            "url": "https://mtt.apigeneration.tech/library/openapi/v1",
            "description": "The example Library server",
            "variables": {
                "var1": {
                    "default": "demo",
                    "description": "An example variable"
                }
            }
        }
    ],
    "paths": {
        "/adult-borrowers": {
            "description": "Operations on the **adultborrowers** resource",
            "get": {
                "tags": [
                    "adult-borrowers"
                ],
                "description": "Get a set of **AdultBorrower**",
                "operationId": "GetAdultBorrowers",
                "parameters": [
                    {
                        "name": "surname",
                        "in": "query",
                        "description": "Optional filter on the surname field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "givenName",
                        "in": "query",
                        "description": "Optional filter on the givenName field",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of AdultBorrower types",
                                    "items": {
                                        "title": "A Borrower who can borrow any media and can vouch for Junior Borrowers.",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/AdultBorrower"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "adult-borrowers"
                ],
                "description": "Create a new **AdultBorrower**",
                "operationId": "PostAdultBorrower",
                "parameters": [],
                "requestBody": {
                    "description": "The **AdultBorrower** to be created",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdultBorrowerInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "201",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of AdultBorrower types",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "adultBorrowerId": {
                                                "type": "string",
                                                "format": "uuid"
                                            }
                                        },
                                        "required": [
                                            "adultBorrowerId"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "409",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "5XX",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/adult-borrowers/{id}": {
            "description": "Operations on the identified **adultborrower** resource",
            "get": {
                "tags": [
                    "adult-borrowers"
                ],
                "description": "For the identified **AdultBorrower** get its properties",
                "operationId": "GetAdultBorrowerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *AdultBorrower* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "A Borrower who can borrow any media and can vouch for Junior Borrowers.",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/AdultBorrower"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "self": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "id",
                                                "self"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/adult-borrowers/{id}/vouched-for-junior-borrowers": {
            "description": "Operations on the **juniorborrower** resource for the identified **adultborrower**",
            "get": {
                "tags": [
                    "adult-borrowers"
                ],
                "description": "Get the set of **JuniorBorrower** the identified **AdultBorrower** vouched for",
                "operationId": "GetJuniorBorrowersWasVouchedForByAdultBorrower_AdultBorrower",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *AdultBorrower* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dob",
                        "in": "query",
                        "description": "Optional filter on the dob field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "surname",
                        "in": "query",
                        "description": "Optional filter on the surname field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "givenName",
                        "in": "query",
                        "description": "Optional filter on the givenName field",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of JuniorBorrower types",
                                    "items": {
                                        "title": "A Borrower who cannot borrow certain Media Titles and a limited number of Media Copies.",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/JuniorBorrower"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/adult-borrowers/{id}/reserved-media-titles": {
            "description": "Operations on the **mediatitle** resource for the identified **borrower**",
            "get": {
                "tags": [
                    "adult-borrowers"
                ],
                "description": "Get the set of **MediaTitle** the identified **Borrower** reserved",
                "operationId": "GetMediaTitlesWasReservedByBorrowers_AdultBorrower",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *AdultBorrower* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Optional filter on the title field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "isbn",
                        "in": "query",
                        "description": "Optional filter on the isbn field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "author",
                        "in": "query",
                        "description": "Optional filter on the author field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rating",
                        "in": "query",
                        "description": "Optional filter on the rating field",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Optional filter on the price field",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Optional filter on the description field",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of MediaTitle types",
                                    "items": {
                                        "title": "Details of a Media Title, such as a Book or Movie. This is distinct from a Media Copy which is a particular ",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/MediaTitle"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/adult-borrowers/{id}/reservation": {
            "description": "Operations on the **reservation** resource for the identified **borrower**",
            "get": {
                "tags": [
                    "adult-borrowers"
                ],
                "description": "Get the  **Reservation** for the identified **Borrower**",
                "operationId": "GetMediaTitlesMediaTitleForBorrowers_AdultBorrower",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *AdultBorrower* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateReserved",
                        "in": "query",
                        "description": "Optional filter on the dateReserved field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "The Reservation of a Media Title, independent of which actual copy is subsequently loaned.",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Reservation"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "self": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "id",
                                                "self"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/adult-borrowers/{id}/borrowed-media-copies": {
            "description": "Operations on the **mediacopy** resource for the identified **borrower**",
            "get": {
                "tags": [
                    "adult-borrowers"
                ],
                "description": "Get the set of **MediaCopy** the identified **Borrower** borrowed",
                "operationId": "GetMediaCopiesWasBorrowedByBorrowers_AdultBorrower",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *AdultBorrower* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateAcquired",
                        "in": "query",
                        "description": "Optional filter on the dateAcquired field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of MediaCopy types",
                                    "items": {
                                        "title": "An actual copy of a MediaTitle that can be borrowed.",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/MediaCopy"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/adult-borrowers/{id}/loan": {
            "description": "Operations on the **loan** resource for the identified **borrower**",
            "get": {
                "tags": [
                    "adult-borrowers"
                ],
                "description": "Get the  **Loan** for the identified **Borrower**",
                "operationId": "GetMediaCopiesMediaCopyForBorrowers_AdultBorrower",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *AdultBorrower* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateBorrowed",
                        "in": "query",
                        "description": "Optional filter on the dateBorrowed field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "dateReturned",
                        "in": "query",
                        "description": "Optional filter on the dateReturned field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "The Loan of a specific Media Copy",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Loan"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "self": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "id",
                                                "self"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/adult-borrowers/{id}/previously-lived-at-addresses": {
            "description": "Operations on the **address** resource for the identified **borrower**",
            "get": {
                "tags": [
                    "adult-borrowers"
                ],
                "description": "Get the set of **Address** the identified **Borrower** previously lived at",
                "operationId": "GetAddressesPreviouslyLivedAtByBorrowers_AdultBorrower",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *AdultBorrower* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "street",
                        "in": "query",
                        "description": "Optional filter on the street field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "town",
                        "in": "query",
                        "description": "Optional filter on the town field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Optional filter on the country field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currentlyLivesAtCount",
                        "in": "query",
                        "description": "Optional filter on the currentlyLivesAtCount field",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of Address types",
                                    "items": {
                                        "title": "An Address that Borrowers currently or previously have lived at.",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/Address"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/adult-borrowers/{id}/currently-lives-at-address": {
            "description": "Operations on the **address** resource for the identified **person**",
            "get": {
                "tags": [
                    "adult-borrowers"
                ],
                "description": "Get the  **Address** the identified **Person** currently lives at",
                "operationId": "GetAddressIsCurrentlyLivedAtByPersons_AdultBorrower",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *AdultBorrower* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "street",
                        "in": "query",
                        "description": "Optional filter on the street field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "town",
                        "in": "query",
                        "description": "Optional filter on the town field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Optional filter on the country field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currentlyLivesAtCount",
                        "in": "query",
                        "description": "Optional filter on the currentlyLivesAtCount field",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "An Address that Borrowers currently or previously have lived at.",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Address"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "self": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "id",
                                                "self"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/borrowers": {
            "description": "Operations on the **borrowers** resource",
            "get": {
                "tags": [
                    "borrowers"
                ],
                "description": "Get a set of **Borrower**",
                "operationId": "GetBorrowers",
                "parameters": [
                    {
                        "name": "surname",
                        "in": "query",
                        "description": "Optional filter on the surname field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "givenName",
                        "in": "query",
                        "description": "Optional filter on the givenName field",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of Borrower types",
                                    "items": {
                                        "title": "The abstract concept of a Borrower. Actual Borrowers must be either Adult or Junior.",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/Borrower"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/borrowers/{id}": {
            "description": "Operations on the identified **borrower** resource",
            "get": {
                "tags": [
                    "borrowers"
                ],
                "description": "For the identified **Borrower** get its properties",
                "operationId": "GetBorrowerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *Borrower* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "The abstract concept of a Borrower. Actual Borrowers must be either Adult or Junior.",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Borrower"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "self": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "id",
                                                "self"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/borrowers/{id}/reserved-media-titles": {
            "description": "Operations on the **mediatitle** resource for the identified **borrower**",
            "get": {
                "tags": [
                    "borrowers"
                ],
                "description": "Get the set of **MediaTitle** the identified **Borrower** reserved",
                "operationId": "GetMediaTitlesWasReservedByBorrowers_Borrower",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *Borrower* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Optional filter on the title field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "isbn",
                        "in": "query",
                        "description": "Optional filter on the isbn field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "author",
                        "in": "query",
                        "description": "Optional filter on the author field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rating",
                        "in": "query",
                        "description": "Optional filter on the rating field",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Optional filter on the price field",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Optional filter on the description field",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of MediaTitle types",
                                    "items": {
                                        "title": "Details of a Media Title, such as a Book or Movie. This is distinct from a Media Copy which is a particular ",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/MediaTitle"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/borrowers/{id}/reservation": {
            "description": "Operations on the **reservation** resource for the identified **borrower**",
            "get": {
                "tags": [
                    "borrowers"
                ],
                "description": "Get the  **Reservation** for the identified **Borrower**",
                "operationId": "GetMediaTitlesMediaTitleForBorrowers_Borrower",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *Borrower* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateReserved",
                        "in": "query",
                        "description": "Optional filter on the dateReserved field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "The Reservation of a Media Title, independent of which actual copy is subsequently loaned.",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Reservation"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "self": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "id",
                                                "self"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/borrowers/{id}/borrowed-media-copies": {
            "description": "Operations on the **mediacopy** resource for the identified **borrower**",
            "get": {
                "tags": [
                    "borrowers"
                ],
                "description": "Get the set of **MediaCopy** the identified **Borrower** borrowed",
                "operationId": "GetMediaCopiesWasBorrowedByBorrowers_Borrower",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *Borrower* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateAcquired",
                        "in": "query",
                        "description": "Optional filter on the dateAcquired field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of MediaCopy types",
                                    "items": {
                                        "title": "An actual copy of a MediaTitle that can be borrowed.",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/MediaCopy"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/borrowers/{id}/loan": {
            "description": "Operations on the **loan** resource for the identified **borrower**",
            "get": {
                "tags": [
                    "borrowers"
                ],
                "description": "Get the  **Loan** for the identified **Borrower**",
                "operationId": "GetMediaCopiesMediaCopyForBorrowers_Borrower",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *Borrower* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateBorrowed",
                        "in": "query",
                        "description": "Optional filter on the dateBorrowed field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "dateReturned",
                        "in": "query",
                        "description": "Optional filter on the dateReturned field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "The Loan of a specific Media Copy",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Loan"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "self": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "id",
                                                "self"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/borrowers/{id}/previously-lived-at-addresses": {
            "description": "Operations on the **address** resource for the identified **borrower**",
            "get": {
                "tags": [
                    "borrowers"
                ],
                "description": "Get the set of **Address** the identified **Borrower** previously lived at",
                "operationId": "GetAddressesPreviouslyLivedAtByBorrowers_Borrower",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *Borrower* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "street",
                        "in": "query",
                        "description": "Optional filter on the street field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "town",
                        "in": "query",
                        "description": "Optional filter on the town field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Optional filter on the country field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currentlyLivesAtCount",
                        "in": "query",
                        "description": "Optional filter on the currentlyLivesAtCount field",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of Address types",
                                    "items": {
                                        "title": "An Address that Borrowers currently or previously have lived at.",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/Address"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/borrowers/{id}/currently-lives-at-address": {
            "description": "Operations on the **address** resource for the identified **person**",
            "get": {
                "tags": [
                    "borrowers"
                ],
                "description": "Get the  **Address** the identified **Person** currently lives at",
                "operationId": "GetAddressIsCurrentlyLivedAtByPersons_Borrower",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *Borrower* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "street",
                        "in": "query",
                        "description": "Optional filter on the street field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "town",
                        "in": "query",
                        "description": "Optional filter on the town field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Optional filter on the country field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currentlyLivesAtCount",
                        "in": "query",
                        "description": "Optional filter on the currentlyLivesAtCount field",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "An Address that Borrowers currently or previously have lived at.",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Address"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "self": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "id",
                                                "self"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/borrowers/{id}/profile": {
            "get": {
                "tags": [
                    "borrowers"
                ],
                "description": "Get the **profile**",
                "operationId": "GetProfiles",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *Borrower* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of BorrowerProfile types",
                                    "items": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/BorrowerProfile"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/junior-borrowers": {
            "description": "Operations on the **juniorborrowers** resource",
            "get": {
                "tags": [
                    "junior-borrowers"
                ],
                "description": "Get a set of **JuniorBorrower**",
                "operationId": "GetJuniorBorrowers",
                "parameters": [
                    {
                        "name": "dob",
                        "in": "query",
                        "description": "Optional filter on the dob field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "surname",
                        "in": "query",
                        "description": "Optional filter on the surname field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "givenName",
                        "in": "query",
                        "description": "Optional filter on the givenName field",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of JuniorBorrower types",
                                    "items": {
                                        "title": "A Borrower who cannot borrow certain Media Titles and a limited number of Media Copies.",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/JuniorBorrower"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "junior-borrowers"
                ],
                "description": "Create a new **JuniorBorrower**",
                "operationId": "PostJuniorBorrower",
                "parameters": [],
                "requestBody": {
                    "description": "The **JuniorBorrower** to be created",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JuniorBorrowerInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "201",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of JuniorBorrower types",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "juniorBorrowerId": {
                                                "type": "string",
                                                "format": "uuid"
                                            }
                                        },
                                        "required": [
                                            "juniorBorrowerId"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "409",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "5XX",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/junior-borrowers/{id}": {
            "description": "Operations on the identified **juniorborrower** resource",
            "get": {
                "tags": [
                    "junior-borrowers"
                ],
                "description": "For the identified **JuniorBorrower** get its properties",
                "operationId": "GetJuniorBorrowerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *JuniorBorrower* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "A Borrower who cannot borrow certain Media Titles and a limited number of Media Copies.",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/JuniorBorrower"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "self": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "id",
                                                "self"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/junior-borrowers/{id}/was-vouched-for-by-adult-borrower": {
            "description": "Operations on the **adultborrower** resource for the identified **juniorborrower**",
            "get": {
                "tags": [
                    "junior-borrowers"
                ],
                "description": "Get the  **AdultBorrower** the identified **JuniorBorrower** was vouched for by",
                "operationId": "GetAdultBorrowerVouchedForJuniorBorrowers_JuniorBorrower",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *JuniorBorrower* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "surname",
                        "in": "query",
                        "description": "Optional filter on the surname field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "givenName",
                        "in": "query",
                        "description": "Optional filter on the givenName field",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "A Borrower who can borrow any media and can vouch for Junior Borrowers.",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/AdultBorrower"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "self": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "id",
                                                "self"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/junior-borrowers/{id}/reserved-media-titles": {
            "description": "Operations on the **mediatitle** resource for the identified **borrower**",
            "get": {
                "tags": [
                    "junior-borrowers"
                ],
                "description": "Get the set of **MediaTitle** the identified **Borrower** reserved",
                "operationId": "GetMediaTitlesWasReservedByBorrowers_JuniorBorrower",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *JuniorBorrower* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Optional filter on the title field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "isbn",
                        "in": "query",
                        "description": "Optional filter on the isbn field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "author",
                        "in": "query",
                        "description": "Optional filter on the author field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rating",
                        "in": "query",
                        "description": "Optional filter on the rating field",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Optional filter on the price field",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Optional filter on the description field",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of MediaTitle types",
                                    "items": {
                                        "title": "Details of a Media Title, such as a Book or Movie. This is distinct from a Media Copy which is a particular ",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/MediaTitle"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/junior-borrowers/{id}/reservation": {
            "description": "Operations on the **reservation** resource for the identified **borrower**",
            "get": {
                "tags": [
                    "junior-borrowers"
                ],
                "description": "Get the  **Reservation** for the identified **Borrower**",
                "operationId": "GetMediaTitlesMediaTitleForBorrowers_JuniorBorrower",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *JuniorBorrower* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateReserved",
                        "in": "query",
                        "description": "Optional filter on the dateReserved field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "The Reservation of a Media Title, independent of which actual copy is subsequently loaned.",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Reservation"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "self": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "id",
                                                "self"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/junior-borrowers/{id}/borrowed-media-copies": {
            "description": "Operations on the **mediacopy** resource for the identified **borrower**",
            "get": {
                "tags": [
                    "junior-borrowers"
                ],
                "description": "Get the set of **MediaCopy** the identified **Borrower** borrowed",
                "operationId": "GetMediaCopiesWasBorrowedByBorrowers_JuniorBorrower",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *JuniorBorrower* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateAcquired",
                        "in": "query",
                        "description": "Optional filter on the dateAcquired field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of MediaCopy types",
                                    "items": {
                                        "title": "An actual copy of a MediaTitle that can be borrowed.",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/MediaCopy"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/junior-borrowers/{id}/loan": {
            "description": "Operations on the **loan** resource for the identified **borrower**",
            "get": {
                "tags": [
                    "junior-borrowers"
                ],
                "description": "Get the  **Loan** for the identified **Borrower**",
                "operationId": "GetMediaCopiesMediaCopyForBorrowers_JuniorBorrower",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *JuniorBorrower* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateBorrowed",
                        "in": "query",
                        "description": "Optional filter on the dateBorrowed field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "dateReturned",
                        "in": "query",
                        "description": "Optional filter on the dateReturned field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "The Loan of a specific Media Copy",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Loan"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "self": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "id",
                                                "self"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/junior-borrowers/{id}/previously-lived-at-addresses": {
            "description": "Operations on the **address** resource for the identified **borrower**",
            "get": {
                "tags": [
                    "junior-borrowers"
                ],
                "description": "Get the set of **Address** the identified **Borrower** previously lived at",
                "operationId": "GetAddressesPreviouslyLivedAtByBorrowers_JuniorBorrower",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *JuniorBorrower* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "street",
                        "in": "query",
                        "description": "Optional filter on the street field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "town",
                        "in": "query",
                        "description": "Optional filter on the town field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Optional filter on the country field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currentlyLivesAtCount",
                        "in": "query",
                        "description": "Optional filter on the currentlyLivesAtCount field",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of Address types",
                                    "items": {
                                        "title": "An Address that Borrowers currently or previously have lived at.",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/Address"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/junior-borrowers/{id}/currently-lives-at-address": {
            "description": "Operations on the **address** resource for the identified **person**",
            "get": {
                "tags": [
                    "junior-borrowers"
                ],
                "description": "Get the  **Address** the identified **Person** currently lives at",
                "operationId": "GetAddressIsCurrentlyLivedAtByPersons_JuniorBorrower",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *JuniorBorrower* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "street",
                        "in": "query",
                        "description": "Optional filter on the street field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "town",
                        "in": "query",
                        "description": "Optional filter on the town field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Optional filter on the country field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currentlyLivesAtCount",
                        "in": "query",
                        "description": "Optional filter on the currentlyLivesAtCount field",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "An Address that Borrowers currently or previously have lived at.",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Address"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "self": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "id",
                                                "self"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/librarians": {
            "description": "Operations on the **librarians** resource",
            "get": {
                "tags": [
                    "librarians"
                ],
                "description": "Get a set of **Librarian**",
                "operationId": "GetLibrarians",
                "parameters": [
                    {
                        "name": "surname",
                        "in": "query",
                        "description": "Optional filter on the surname field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "givenName",
                        "in": "query",
                        "description": "Optional filter on the givenName field",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of Librarian types",
                                    "items": {
                                        "title": "A Librarian who can order copies of MediaTitles and may act as a manager or mentor for other librarians.",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/Librarian"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "librarians"
                ],
                "description": "Create a new **Librarian**",
                "operationId": "PostLibrarian",
                "parameters": [],
                "requestBody": {
                    "description": "The **Librarian** to be created",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LibrarianInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "201",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of Librarian types",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "librarianId": {
                                                "type": "string",
                                                "format": "uuid"
                                            }
                                        },
                                        "required": [
                                            "librarianId"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "409",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "5XX",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/librarians/{id}": {
            "description": "Operations on the identified **librarian** resource",
            "get": {
                "tags": [
                    "librarians"
                ],
                "description": "For the identified **Librarian** get its properties",
                "operationId": "GetLibrarianById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *Librarian* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "A Librarian who can order copies of MediaTitles and may act as a manager or mentor for other librarians.",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Librarian"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "self": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "id",
                                                "self"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/librarians/{id}/manages-librarians": {
            "description": "Operations on the **librarian** resource for the identified **librarian**",
            "get": {
                "tags": [
                    "librarians"
                ],
                "description": "Get the set of **Librarian** the identified **Librarian** manages",
                "operationId": "GetLibrariansIsManagedByLibrarian_Librarian",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *Librarian* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "surname",
                        "in": "query",
                        "description": "Optional filter on the surname field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "givenName",
                        "in": "query",
                        "description": "Optional filter on the givenName field",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of Librarian types",
                                    "items": {
                                        "title": "A Librarian who can order copies of MediaTitles and may act as a manager or mentor for other librarians.",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/Librarian"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/librarians/{id}/is-managed-by-librarian": {
            "description": "Operations on the **librarian** resource for the identified **librarian**",
            "get": {
                "tags": [
                    "librarians"
                ],
                "description": "Get the  **Librarian** the identified **Librarian** is managed by",
                "operationId": "GetLibrarianManagesLibrarians_Librarian",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *Librarian* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "surname",
                        "in": "query",
                        "description": "Optional filter on the surname field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "givenName",
                        "in": "query",
                        "description": "Optional filter on the givenName field",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "A Librarian who can order copies of MediaTitles and may act as a manager or mentor for other librarians.",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Librarian"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "self": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "id",
                                                "self"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/librarians/{id}/is-mentored-by-librarian": {
            "description": "Operations on the **librarian** resource for the identified **librarian**",
            "get": {
                "tags": [
                    "librarians"
                ],
                "description": "Get the  **Librarian** the identified **Librarian** is mentored by",
                "operationId": "GetLibrarianMentorsLibrarians_Librarian",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *Librarian* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "surname",
                        "in": "query",
                        "description": "Optional filter on the surname field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "givenName",
                        "in": "query",
                        "description": "Optional filter on the givenName field",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "A Librarian who can order copies of MediaTitles and may act as a manager or mentor for other librarians.",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Librarian"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "self": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "id",
                                                "self"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/librarians/{id}/mentors-librarians": {
            "description": "Operations on the **librarian** resource for the identified **librarian**",
            "get": {
                "tags": [
                    "librarians"
                ],
                "description": "Get the set of **Librarian** the identified **Librarian** mentors",
                "operationId": "GetLibrariansIsMentoredByLibrarian_Librarian",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *Librarian* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "surname",
                        "in": "query",
                        "description": "Optional filter on the surname field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "givenName",
                        "in": "query",
                        "description": "Optional filter on the givenName field",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of Librarian types",
                                    "items": {
                                        "title": "A Librarian who can order copies of MediaTitles and may act as a manager or mentor for other librarians.",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/Librarian"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/librarians/{id}/placed-media-copy-orders": {
            "description": "Operations on the **mediacopyorder** resource for the identified **librarian**",
            "get": {
                "tags": [
                    "librarians"
                ],
                "description": "Get the set of **MediaCopyOrder** the identified **Librarian** placed",
                "operationId": "GetMediaCopyOrdersContainedInLibrarian_Librarian",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *Librarian* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "copyCount",
                        "in": "query",
                        "description": "Optional filter on the copyCount field",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "dateOrdered",
                        "in": "query",
                        "description": "Optional filter on the dateOrdered field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of MediaCopyOrder types",
                                    "items": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/MediaCopyOrder"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "librarians"
                ],
                "description": "Create a new **MediaCopyOrder for the identified **Librarian**",
                "operationId": "PostMediaCopyOrdersContainedInLibrarian_Librarian",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *Librarian* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "copyCount",
                        "in": "query",
                        "description": "Optional filter on the copyCount field",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "dateOrdered",
                        "in": "query",
                        "description": "Optional filter on the dateOrdered field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The **MediaCopyOrder** to be created",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MediaCopyOrderInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "201",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of MediaCopyOrder types",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "mediaCopyOrderId": {
                                                "type": "string",
                                                "format": "uuid"
                                            }
                                        },
                                        "required": [
                                            "mediaCopyOrderId"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "409",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "5XX",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/librarians/{id}/currently-lives-at-address": {
            "description": "Operations on the **address** resource for the identified **person**",
            "get": {
                "tags": [
                    "librarians"
                ],
                "description": "Get the  **Address** the identified **Person** currently lives at",
                "operationId": "GetAddressIsCurrentlyLivedAtByPersons_Librarian",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *Librarian* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "street",
                        "in": "query",
                        "description": "Optional filter on the street field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "town",
                        "in": "query",
                        "description": "Optional filter on the town field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Optional filter on the country field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currentlyLivesAtCount",
                        "in": "query",
                        "description": "Optional filter on the currentlyLivesAtCount field",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "An Address that Borrowers currently or previously have lived at.",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Address"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "self": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "id",
                                                "self"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/loans": {
            "description": "Operations on the **loans** resource",
            "get": {
                "tags": [
                    "loans"
                ],
                "description": "Get a set of **Loan**",
                "operationId": "GetLoans",
                "parameters": [
                    {
                        "name": "dateBorrowed",
                        "in": "query",
                        "description": "Optional filter on the dateBorrowed field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "dateReturned",
                        "in": "query",
                        "description": "Optional filter on the dateReturned field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of Loan types",
                                    "items": {
                                        "title": "The Loan of a specific Media Copy",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/Loan"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "loans"
                ],
                "description": "Create a new **Loan**",
                "operationId": "PostLoan",
                "parameters": [],
                "requestBody": {
                    "description": "The **Loan** to be created",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoanInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "201",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of Loan types",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "loanId": {
                                                "type": "string",
                                                "format": "uuid"
                                            }
                                        },
                                        "required": [
                                            "loanId"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "409",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "5XX",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/loans/{id}": {
            "description": "Operations on the identified **loan** resource",
            "get": {
                "tags": [
                    "loans"
                ],
                "description": "For the identified **Loan** get its properties",
                "operationId": "GetLoanById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *Loan* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "The Loan of a specific Media Copy",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Loan"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "self": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "id",
                                                "self"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/loans/{id}/borrower": {
            "description": "Operations on the **borrower** resource for the identified **loan**",
            "get": {
                "tags": [
                    "loans"
                ],
                "description": "Get the **Borrower** for this Loan",
                "operationId": "GetBorrowersBorrowerForLoan",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *Loan* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "surname",
                        "in": "query",
                        "description": "Optional filter on the surname field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "givenName",
                        "in": "query",
                        "description": "Optional filter on the givenName field",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of Borrower types",
                                    "items": {
                                        "title": "The abstract concept of a Borrower. Actual Borrowers must be either Adult or Junior.",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/Borrower"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/loans/{id}/media-copy": {
            "description": "Operations on the **mediacopy** resource for the identified **loan**",
            "get": {
                "tags": [
                    "loans"
                ],
                "description": "Get the **MediaCopy** for this Loan",
                "operationId": "GetMediaCopiesMediaCopyForLoan",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *Loan* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateAcquired",
                        "in": "query",
                        "description": "Optional filter on the dateAcquired field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of MediaCopy types",
                                    "items": {
                                        "title": "An actual copy of a MediaTitle that can be borrowed.",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/MediaCopy"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media-copy-orders": {
            "description": "Operations on the **mediacopyorders** resource",
            "get": {
                "tags": [
                    "media-copy-orders"
                ],
                "description": "Get a set of **MediaCopyOrder**",
                "operationId": "GetMediaCopyOrders",
                "parameters": [
                    {
                        "name": "copyCount",
                        "in": "query",
                        "description": "Optional filter on the copyCount field",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "dateOrdered",
                        "in": "query",
                        "description": "Optional filter on the dateOrdered field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of MediaCopyOrder types",
                                    "items": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/MediaCopyOrder"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media-copy-orders/{id}": {
            "description": "Operations on the identified **mediacopyorder** resource",
            "get": {
                "tags": [
                    "media-copy-orders"
                ],
                "description": "For the identified **MediaCopyOrder** get its properties",
                "operationId": "GetMediaCopyOrderById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *MediaCopyOrder* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/MediaCopyOrder"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "self": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "id",
                                                "self"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media-copy-orders/{id}/order-by-librarian": {
            "description": "Operations on the **librarian** resource for the identified **mediacopyorder**",
            "get": {
                "tags": [
                    "media-copy-orders"
                ],
                "description": "Get the  **Librarian** the identified **MediaCopyOrder** holds",
                "operationId": "GetLibrarianPlacedMediaCopyOrders",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *MediaCopyOrder* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "surname",
                        "in": "query",
                        "description": "Optional filter on the surname field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "givenName",
                        "in": "query",
                        "description": "Optional filter on the givenName field",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "A Librarian who can order copies of MediaTitles and may act as a manager or mentor for other librarians.",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Librarian"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "self": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "id",
                                                "self"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media-copy-orders/{id}/was-order-for-media-copies": {
            "description": "Operations on the **mediacopy** resource for the identified **mediacopyorder**",
            "get": {
                "tags": [
                    "media-copy-orders"
                ],
                "description": "Get the set of **MediaCopy** the identified **MediaCopyOrder** was order for",
                "operationId": "GetMediaCopiesWasOrderedByMediaCopyOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *MediaCopyOrder* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateAcquired",
                        "in": "query",
                        "description": "Optional filter on the dateAcquired field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of MediaCopy types",
                                    "items": {
                                        "title": "An actual copy of a MediaTitle that can be borrowed.",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/MediaCopy"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media-titles": {
            "description": "Operations on the **mediatitles** resource",
            "get": {
                "tags": [
                    "media-titles"
                ],
                "description": "Get a set of **MediaTitle**",
                "operationId": "GetMediaTitles",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Optional filter on the title field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "isbn",
                        "in": "query",
                        "description": "Optional filter on the isbn field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "author",
                        "in": "query",
                        "description": "Optional filter on the author field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rating",
                        "in": "query",
                        "description": "Optional filter on the rating field",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Optional filter on the price field",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Optional filter on the description field",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of MediaTitle types",
                                    "items": {
                                        "title": "Details of a Media Title, such as a Book or Movie. This is distinct from a Media Copy which is a particular ",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/MediaTitle"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "media-titles"
                ],
                "description": "Create a new **MediaTitle**",
                "operationId": "PostMediaTitle",
                "parameters": [],
                "requestBody": {
                    "description": "The **MediaTitle** to be created",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MediaTitleInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "201",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of MediaTitle types",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "mediaTitleId": {
                                                "type": "string",
                                                "format": "uuid"
                                            }
                                        },
                                        "required": [
                                            "mediaTitleId"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "409",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "5XX",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media-titles/{id}": {
            "description": "Operations on the identified **mediatitle** resource",
            "get": {
                "tags": [
                    "media-titles"
                ],
                "description": "For the identified **MediaTitle** get its properties",
                "operationId": "GetMediaTitleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *MediaTitle* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Details of a Media Title, such as a Book or Movie. This is distinct from a Media Copy which is a particular ",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/MediaTitle"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "self": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "id",
                                                "self"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media-titles/{id}/was-reserved-by-borrowers": {
            "description": "Operations on the **borrower** resource for the identified **mediatitle**",
            "get": {
                "tags": [
                    "media-titles"
                ],
                "description": "Get the set of **Borrower** the identified **MediaTitle** was reserved by",
                "operationId": "GetBorrowersReservedMediaTitles",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *MediaTitle* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "surname",
                        "in": "query",
                        "description": "Optional filter on the surname field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "givenName",
                        "in": "query",
                        "description": "Optional filter on the givenName field",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of Borrower types",
                                    "items": {
                                        "title": "The abstract concept of a Borrower. Actual Borrowers must be either Adult or Junior.",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/Borrower"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media-titles/{id}/reservation": {
            "description": "Operations on the **reservation** resource for the identified **mediatitle**",
            "get": {
                "tags": [
                    "media-titles"
                ],
                "description": "Get the  **Reservation** for the identified **MediaTitle**",
                "operationId": "GetBorrowersBorrowerForMediaTitles",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *MediaTitle* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateReserved",
                        "in": "query",
                        "description": "Optional filter on the dateReserved field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "The Reservation of a Media Title, independent of which actual copy is subsequently loaned.",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Reservation"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "self": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "id",
                                                "self"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/media-titles/{id}/is-held-as-media-copies": {
            "description": "Operations on the **mediacopy** resource for the identified **mediatitle**",
            "get": {
                "tags": [
                    "media-titles"
                ],
                "description": "Get the set of **MediaCopy** the identified **MediaTitle** is held as",
                "operationId": "GetMediaCopiesContainedInMediaTitle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *MediaTitle* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateAcquired",
                        "in": "query",
                        "description": "Optional filter on the dateAcquired field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of MediaCopy types",
                                    "items": {
                                        "title": "An actual copy of a MediaTitle that can be borrowed.",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/MediaCopy"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "media-titles"
                ],
                "description": "Create a new **MediaCopy for the identified **MediaTitle**",
                "operationId": "PostMediaCopiesContainedInMediaTitle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *MediaTitle* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateAcquired",
                        "in": "query",
                        "description": "Optional filter on the dateAcquired field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The **MediaCopy** to be created",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MediaCopyInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "201",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of MediaCopy types",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "mediaCopyId": {
                                                "type": "string",
                                                "format": "uuid"
                                            }
                                        },
                                        "required": [
                                            "mediaCopyId"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "409",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "5XX",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reservations": {
            "description": "Operations on the **reservations** resource",
            "get": {
                "tags": [
                    "reservations"
                ],
                "description": "Get a set of **Reservation**",
                "operationId": "GetReservations",
                "parameters": [
                    {
                        "name": "dateReserved",
                        "in": "query",
                        "description": "Optional filter on the dateReserved field",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of Reservation types",
                                    "items": {
                                        "title": "The Reservation of a Media Title, independent of which actual copy is subsequently loaned.",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/Reservation"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "reservations"
                ],
                "description": "Create a new **Reservation**",
                "operationId": "PostReservation",
                "parameters": [],
                "requestBody": {
                    "description": "The **Reservation** to be created",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReservationInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "201",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of Reservation types",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "reservationId": {
                                                "type": "string",
                                                "format": "uuid"
                                            }
                                        },
                                        "required": [
                                            "reservationId"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "409",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "5XX": {
                        "description": "5XX",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reservations/{id}": {
            "description": "Operations on the identified **reservation** resource",
            "get": {
                "tags": [
                    "reservations"
                ],
                "description": "For the identified **Reservation** get its properties",
                "operationId": "GetReservationById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *Reservation* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "The Reservation of a Media Title, independent of which actual copy is subsequently loaned.",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Reservation"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "self": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "id",
                                                "self"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reservations/{id}/borrower": {
            "description": "Operations on the **borrower** resource for the identified **reservation**",
            "get": {
                "tags": [
                    "reservations"
                ],
                "description": "Get the **Borrower** for this Reservation",
                "operationId": "GetBorrowersBorrowerForReservation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *Reservation* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "surname",
                        "in": "query",
                        "description": "Optional filter on the surname field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "givenName",
                        "in": "query",
                        "description": "Optional filter on the givenName field",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of Borrower types",
                                    "items": {
                                        "title": "The abstract concept of a Borrower. Actual Borrowers must be either Adult or Junior.",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/Borrower"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reservations/{id}/media-title": {
            "description": "Operations on the **mediatitle** resource for the identified **reservation**",
            "get": {
                "tags": [
                    "reservations"
                ],
                "description": "Get the **MediaTitle** for this Reservation",
                "operationId": "GetMediaTitlesMediaTitleForReservation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Id of the *Reservation* for this operation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Optional filter on the title field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "isbn",
                        "in": "query",
                        "description": "Optional filter on the isbn field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "author",
                        "in": "query",
                        "description": "Optional filter on the author field",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rating",
                        "in": "query",
                        "description": "Optional filter on the rating field",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Optional filter on the price field",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Optional filter on the description field",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of MediaTitle types",
                                    "items": {
                                        "title": "Details of a Media Title, such as a Book or Movie. This is distinct from a Media Copy which is a particular ",
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/MediaTitle"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/borrower-profile": {
            "get": {
                "tags": [
                    "borrower-profiles"
                ],
                "description": "Get the **borrowerProfile**",
                "operationId": "GetBorrowerProfiles",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of BorrowerProfile types",
                                    "items": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/BorrowerProfile"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/top-genres": {
            "description": "For the specified number of towns, the number of loans for each Genre is returned.",
            "get": {
                "tags": [
                    "top-genres"
                ],
                "description": "Get the **topGenres**",
                "operationId": "GetTopGenres",
                "parameters": [
                    {
                        "name": "townLimit",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of TopGenre types",
                                    "items": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/TopGenre"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/county-stats": {
            "description": "Gets the statistics for each County. For each Town and Borrower the total number of Loans is retrieved.",
            "get": {
                "tags": [
                    "county-stats"
                ],
                "description": "Get the **countyStats**",
                "operationId": "GetCountyStats",
                "parameters": [
                    {
                        "name": "borrowerType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "title": "An array of BorrowerStatsByCounty types",
                                    "items": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/BorrowerStatsByCounty"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "self": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "id",
                                                    "self"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occurred - see status code and problem object.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Address": {
                "title": "An Address that Borrowers currently or previously have lived at.",
                "type": "object",
                "properties": {
                    "street": {
                        "type": "string"
                    },
                    "town": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "currentlyLivesAtCount": {
                        "type": "integer"
                    },
                    "isCurrentlyLivedAtByPersons": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "required": [
                    "street",
                    "town",
                    "country",
                    "currentlyLivesAtCount",
                    "isCurrentlyLivedAtByPersons"
                ]
            },
            "AdultBorrower": {
                "title": "A Borrower who can borrow any media and can vouch for Junior Borrowers.",
                "type": "object",
                "properties": {
                    "borrower": {
                        "$ref": "#/components/schemas/Borrower"
                    },
                    "vouchedForJuniorBorrowers": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "required": [
                    "borrower"
                ]
            },
            "AdultBorrowerInput": {
                "title": "A Borrower who can borrow any media and can vouch for Junior Borrowers.",
                "type": "object",
                "properties": {
                    "borrower": {
                        "$ref": "#/components/schemas/BorrowerInput"
                    }
                },
                "required": [
                    "borrower"
                ]
            },
            "Borrower": {
                "title": "The abstract concept of a Borrower. Actual Borrowers must be either Adult or Junior.",
                "type": "object",
                "properties": {
                    "person": {
                        "$ref": "#/components/schemas/Person"
                    },
                    "reservedMediaTitles": {
                        "type": "string",
                        "format": "uri"
                    },
                    "reservation": {
                        "type": "string",
                        "format": "uri"
                    },
                    "borrowedMediaCopies": {
                        "type": "string",
                        "format": "uri"
                    },
                    "loan": {
                        "type": "string",
                        "format": "uri"
                    },
                    "previouslyLivedAtAddresses": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "required": [
                    "person"
                ]
            },
            "BorrowerInput": {
                "title": "The abstract concept of a Borrower. Actual Borrowers must be either Adult or Junior.",
                "type": "object",
                "properties": {
                    "person": {
                        "$ref": "#/components/schemas/PersonInput"
                    }
                },
                "required": [
                    "person"
                ]
            },
            "BorrowerProfile": {
                "type": "object",
                "properties": {
                    "givenName": {
                        "type": "string"
                    },
                    "surname": {
                        "type": "string"
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "loans": {
                        "type": "array",
                        "title": "An array of LoanSummary types",
                        "items": {
                            "$ref": "#/components/schemas/LoanSummary"
                        }
                    },
                    "reservations": {
                        "type": "array",
                        "title": "An array of ReservationSummary types",
                        "items": {
                            "$ref": "#/components/schemas/ReservationSummary"
                        }
                    }
                },
                "required": [
                    "givenName",
                    "surname",
                    "address"
                ]
            },
            "BorrowerStatsByCounty": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "loanSummaryForCounty": {
                        "type": "array",
                        "title": "An array of LoanSummaryForCounty types",
                        "items": {
                            "$ref": "#/components/schemas/LoanSummaryForCounty"
                        }
                    }
                },
                "required": [
                    "type",
                    "id"
                ]
            },
            "BorrowerSummary": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "surname": {
                        "type": "string"
                    },
                    "givenName": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/BorrowerType"
                    },
                    "totalLoans": {
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "surname",
                    "givenName",
                    "type",
                    "totalLoans"
                ]
            },
            "BorrowerType": {
                "type": "string",
                "enum": []
            },
            "Error": {
                "title": "An RFC 7807 compliant type to report an error to the client.",
                "type": "object",
                "properties": {
                    "detail": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "instance": {
                        "type": "string"
                    }
                },
                "required": [
                    "detail",
                    "title",
                    "status"
                ]
            },
            "Genre": {
                "type": "string",
                "enum": []
            },
            "GenreStatsByTown": {
                "type": "object",
                "properties": {
                    "historicalFiction": {
                        "type": "integer"
                    },
                    "youngAdult": {
                        "type": "integer"
                    },
                    "town": {
                        "type": "string"
                    },
                    "fantasy": {
                        "type": "integer"
                    },
                    "romance": {
                        "type": "integer"
                    },
                    "mystery": {
                        "type": "integer"
                    },
                    "scienceFiction": {
                        "type": "integer"
                    }
                },
                "required": [
                    "historicalFiction",
                    "youngAdult",
                    "town",
                    "fantasy",
                    "romance",
                    "mystery",
                    "scienceFiction"
                ]
            },
            "JuniorBorrower": {
                "title": "A Borrower who cannot borrow certain Media Titles and a limited number of Media Copies.",
                "type": "object",
                "properties": {
                    "dob": {
                        "type": "string",
                        "format": "date"
                    },
                    "borrower": {
                        "$ref": "#/components/schemas/Borrower"
                    },
                    "wasVouchedForByAdultBorrower": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "required": [
                    "dob",
                    "borrower",
                    "wasVouchedForByAdultBorrower"
                ]
            },
            "JuniorBorrowerInput": {
                "title": "A Borrower who cannot borrow certain Media Titles and a limited number of Media Copies.",
                "type": "object",
                "properties": {
                    "dob": {
                        "type": "string",
                        "format": "date"
                    },
                    "borrower": {
                        "$ref": "#/components/schemas/BorrowerInput"
                    },
                    "wasVouchedForByAdultBorrowerId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "dob",
                    "borrower",
                    "wasVouchedForByAdultBorrowerId"
                ]
            },
            "Librarian": {
                "title": "A Librarian who can order copies of MediaTitles and may act as a manager or mentor for other librarians.",
                "type": "object",
                "properties": {
                    "person": {
                        "$ref": "#/components/schemas/Person"
                    },
                    "managesLibrarians": {
                        "type": "string",
                        "format": "uri"
                    },
                    "isManagedByLibrarian": {
                        "type": "string",
                        "format": "uri"
                    },
                    "isMentoredByLibrarian": {
                        "type": "string",
                        "format": "uri"
                    },
                    "mentorsLibrarians": {
                        "type": "string",
                        "format": "uri"
                    },
                    "placedMediaCopyOrders": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "required": [
                    "person"
                ]
            },
            "LibrarianInput": {
                "title": "A Librarian who can order copies of MediaTitles and may act as a manager or mentor for other librarians.",
                "type": "object",
                "properties": {
                    "person": {
                        "$ref": "#/components/schemas/PersonInput"
                    }
                },
                "required": [
                    "person"
                ]
            },
            "Loan": {
                "title": "The Loan of a specific Media Copy",
                "type": "object",
                "properties": {
                    "dateBorrowed": {
                        "type": "string",
                        "format": "date"
                    },
                    "dateReturned": {
                        "type": "string",
                        "format": "date"
                    },
                    "borrower": {
                        "type": "string",
                        "format": "uri"
                    },
                    "mediaCopy": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "required": [
                    "dateBorrowed",
                    "borrower",
                    "mediaCopy"
                ]
            },
            "LoanInput": {
                "title": "The Loan of a specific Media Copy",
                "type": "object",
                "properties": {
                    "dateBorrowed": {
                        "type": "string",
                        "format": "date"
                    },
                    "dateReturned": {
                        "type": "string",
                        "format": "date"
                    },
                    "borrowerId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "mediaCopyId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "dateBorrowed",
                    "borrowerId",
                    "mediaCopyId"
                ]
            },
            "LoanSummary": {
                "type": "object",
                "properties": {
                    "dataBorrowed": {
                        "type": "string",
                        "format": "date"
                    },
                    "dateReturned": {
                        "type": "string",
                        "format": "date"
                    },
                    "mediaCopyId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "mediaTitle": {
                        "$ref": "#/components/schemas/TitleSummary"
                    }
                },
                "required": [
                    "dataBorrowed",
                    "mediaCopyId",
                    "mediaTitle"
                ]
            },
            "LoanSummaryForCounty": {
                "type": "object",
                "properties": {
                    "totalLoans": {
                        "type": "integer"
                    },
                    "countyName": {
                        "type": "string"
                    },
                    "loanSummaryForTown": {
                        "type": "array",
                        "title": "An array of LoanSummaryForTown types",
                        "items": {
                            "$ref": "#/components/schemas/LoanSummaryForTown"
                        }
                    }
                },
                "required": [
                    "totalLoans",
                    "countyName"
                ]
            },
            "LoanSummaryForTown": {
                "type": "object",
                "properties": {
                    "townName": {
                        "type": "string"
                    },
                    "totalLoans": {
                        "type": "integer"
                    },
                    "borrowerSummary": {
                        "type": "array",
                        "title": "An array of BorrowerSummary types",
                        "items": {
                            "$ref": "#/components/schemas/BorrowerSummary"
                        }
                    }
                },
                "required": [
                    "townName",
                    "totalLoans"
                ]
            },
            "MediaCopy": {
                "title": "An actual copy of a MediaTitle that can be borrowed.",
                "type": "object",
                "properties": {
                    "dateAcquired": {
                        "type": "string",
                        "format": "date"
                    },
                    "wasBorrowedByBorrowers": {
                        "type": "string",
                        "format": "uri"
                    },
                    "loan": {
                        "type": "string",
                        "format": "uri"
                    },
                    "mediaTitle": {
                        "type": "string",
                        "format": "uri"
                    },
                    "wasOrderedByMediaCopyOrder": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "required": [
                    "dateAcquired",
                    "wasOrderedByMediaCopyOrder"
                ]
            },
            "MediaCopyInput": {
                "title": "An actual copy of a MediaTitle that can be borrowed.",
                "type": "object",
                "properties": {
                    "dateAcquired": {
                        "type": "string",
                        "format": "date"
                    },
                    "wasOrderedByMediaCopyOrderId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "dateAcquired",
                    "wasOrderedByMediaCopyOrderId"
                ]
            },
            "MediaCopyOrder": {
                "type": "object",
                "properties": {
                    "copyCount": {
                        "type": "integer"
                    },
                    "dateOrdered": {
                        "type": "string",
                        "format": "date"
                    },
                    "orderByLibrarian": {
                        "type": "string",
                        "format": "uri"
                    },
                    "wasOrderForMediaCopies": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "required": [
                    "copyCount",
                    "dateOrdered",
                    "wasOrderForMediaCopies"
                ]
            },
            "MediaCopyOrderInput": {
                "type": "object",
                "properties": {
                    "copyCount": {
                        "type": "integer"
                    },
                    "dateOrdered": {
                        "type": "string",
                        "format": "date"
                    }
                },
                "required": [
                    "copyCount",
                    "dateOrdered"
                ]
            },
            "MediaTitle": {
                "title": "Details of a Media Title, such as a Book or Movie. This is distinct from a Media Copy which is a particular ",
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "isbn": {
                        "type": "string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "mediaType": {
                        "$ref": "#/components/schemas/MediaType"
                    },
                    "rating": {
                        "type": "number",
                        "format": "float"
                    },
                    "price": {
                        "type": "number",
                        "format": "float"
                    },
                    "description": {
                        "type": "string"
                    },
                    "wasReservedByBorrowers": {
                        "type": "string",
                        "format": "uri"
                    },
                    "reservation": {
                        "type": "string",
                        "format": "uri"
                    },
                    "isHeldAsMediaCopies": {
                        "type": "array",
                        "title": "An array of MediaCopy types",
                        "items": {
                            "$ref": "#/components/schemas/MediaCopy"
                        }
                    }
                },
                "required": [
                    "title",
                    "isbn",
                    "author",
                    "mediaType",
                    "rating",
                    "price",
                    "description",
                    "isHeldAsMediaCopies"
                ]
            },
            "MediaTitleInput": {
                "title": "Details of a Media Title, such as a Book or Movie. This is distinct from a Media Copy which is a particular ",
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "isbn": {
                        "type": "string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "mediaType": {
                        "$ref": "#/components/schemas/MediaType"
                    },
                    "rating": {
                        "type": "number",
                        "format": "float"
                    },
                    "price": {
                        "type": "number",
                        "format": "float"
                    },
                    "description": {
                        "type": "string"
                    },
                    "isHeldAsMediaCopies": {
                        "type": "array",
                        "title": "An array of MediaCopyInput types",
                        "items": {
                            "$ref": "#/components/schemas/MediaCopyInput"
                        }
                    }
                },
                "required": [
                    "title",
                    "isbn",
                    "author",
                    "mediaType",
                    "rating",
                    "price",
                    "description",
                    "isHeldAsMediaCopies"
                ]
            },
            "MediaType": {
                "title": "The types of MediaTitle that the library holds.",
                "type": "string",
                "enum": []
            },
            "Person": {
                "type": "object",
                "properties": {
                    "surname": {
                        "type": "string"
                    },
                    "givenName": {
                        "type": "string"
                    },
                    "currentlyLivesAtAddress": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "required": [
                    "surname",
                    "givenName",
                    "currentlyLivesAtAddress"
                ]
            },
            "PersonInput": {
                "type": "object",
                "properties": {
                    "surname": {
                        "type": "string"
                    },
                    "givenName": {
                        "type": "string"
                    },
                    "currentlyLivesAtAddressId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "surname",
                    "givenName",
                    "currentlyLivesAtAddressId"
                ]
            },
            "Reservation": {
                "title": "The Reservation of a Media Title, independent of which actual copy is subsequently loaned.",
                "type": "object",
                "properties": {
                    "dateReserved": {
                        "type": "string",
                        "format": "date"
                    },
                    "borrower": {
                        "type": "string",
                        "format": "uri"
                    },
                    "mediaTitle": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "required": [
                    "dateReserved",
                    "borrower",
                    "mediaTitle"
                ]
            },
            "ReservationInput": {
                "title": "The Reservation of a Media Title, independent of which actual copy is subsequently loaned.",
                "type": "object",
                "properties": {
                    "dateReserved": {
                        "type": "string",
                        "format": "date"
                    },
                    "borrowerId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "mediaTitleId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "dateReserved",
                    "borrowerId",
                    "mediaTitleId"
                ]
            },
            "ReservationSummary": {
                "type": "object",
                "properties": {
                    "dateReserved": {
                        "type": "string",
                        "format": "date"
                    },
                    "mediaTitle": {
                        "$ref": "#/components/schemas/TitleSummary"
                    }
                },
                "required": [
                    "dateReserved",
                    "mediaTitle"
                ]
            },
            "TitleSummary": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "mediaTitleId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "genre": {
                        "$ref": "#/components/schemas/Genre"
                    }
                },
                "required": [
                    "title",
                    "mediaTitleId",
                    "genre"
                ]
            },
            "TopGenre": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "genreStatsByTown": {
                        "type": "array",
                        "title": "An array of GenreStatsByTown types",
                        "items": {
                            "$ref": "#/components/schemas/GenreStatsByTown"
                        }
                    }
                },
                "required": [
                    "type",
                    "id"
                ]
            }
        }
    },
    "tags": [
        {
            "name": "adult-borrowers",
            "description": "A Borrower who can borrow any media and can vouch for Junior Borrowers."
        },
        {
            "name": "borrower-profiles"
        },
        {
            "name": "borrowers",
            "description": "The abstract concept of a Borrower. Actual Borrowers must be either Adult or Junior."
        },
        {
            "name": "county-stats",
            "description": "Gets the statistics for each County. For each Town and Borrower the total number of Loans is retrieved."
        },
        {
            "name": "junior-borrowers",
            "description": "A Borrower who cannot borrow certain Media Titles and a limited number of Media Copies."
        },
        {
            "name": "librarians",
            "description": "A Librarian who can order copies of MediaTitles and may act as a manager or mentor for other librarians."
        },
        {
            "name": "loans",
            "description": "The Loan of a specific Media Copy"
        },
        {
            "name": "media-copies",
            "description": "An actual copy of a MediaTitle that can be borrowed."
        },
        {
            "name": "media-copy-orders"
        },
        {
            "name": "media-titles",
            "description": "Details of a Media Title, such as a Book or Movie. This is distinct from a Media Copy which is a particular "
        },
        {
            "name": "reservations",
            "description": "The Reservation of a Media Title, independent of which actual copy is subsequently loaned."
        },
        {
            "name": "top-genres",
            "description": "For the specified number of towns, the number of loans for each Genre is returned."
        }
    ]
}